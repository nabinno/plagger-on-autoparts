#!/usr/bin/env ruby

# Copyright (c) 2013-2014 Irrational Industries Inc. d.b.a. Nitrous.IO
# This software is licensed under the [BSD 2-Clause license](https://raw.github.com/nitrous-io/autoparts/master/LICENSE).

require 'pathname'

EXECUTABLE_PATH = Pathname.new(__FILE__).realpath
PROJECT_ROOT = File.expand_path('../..', EXECUTABLE_PATH)

lib = File.join(PROJECT_ROOT, 'lib')
vendor = File.join(PROJECT_ROOT, 'vendor')
[lib, vendor].each do |d|
  $LOAD_PATH.unshift(d) unless $LOAD_PATH.include?(d)
end

require 'autoparts'

cli = Autoparts::CLIParser.new(ARGV)

commands = {
  'help'      => Autoparts::Commands::Help,
  'env'      =>  Autoparts::Commands::Env,
  'init'      => Autoparts::Commands::Init,
  'info'      => Autoparts::Commands::Info,
  'install'   => Autoparts::Commands::Install,
  'list'      => Autoparts::Commands::List,
  'purge'     => Autoparts::Commands::Purge,
  'restart'   => Autoparts::Commands::Restart,
  'search'    => Autoparts::Commands::Search,
  'start'     => Autoparts::Commands::Start,
  'status'    => Autoparts::Commands::Status,
  'stop'      => Autoparts::Commands::Stop,
  'uninstall' => Autoparts::Commands::Uninstall,
  'update'    => Autoparts::Commands::Update
}

unless ENV['AUTOPARTS_DEV'].nil?
  commands['archive'] = Autoparts::Commands::Archive
  commands['upload']  = Autoparts::Commands::Upload
end

if command = commands[cli.command || 'help']
  command.new(cli.args, cli.options)
else
  abort "parts: no such command \"#{cli.command}\""
end
